require:
  - rubocop-rspec

inherit_mode:
  merge:
    - Exclude

AllCops:
  TargetRubyVersion: 3.1
  # RuboCop has a bunch of cops enabled by default. This setting tells RuboCop
  # to ignore them, so only the ones explicitly set in this file are enabled.
  DisabledByDefault: true
  Exclude:
    - 'db/schema.rb'
    - 'db/data_schema.rb'
    - 'db_etl/schema.rb'
    - 'config/_env.local.rb'
  UseCache: true
  CacheRootDirectory: tmp/
  MaxFilesInCache: 30000

# ==============================================================================
# Bundler namespace
# ==============================================================================

Bundler/OrderedGems:
  Enabled: true

Bundler/DuplicatedGem:
  Enabled: true

# ==============================================================================
# Layout namespace
# ==============================================================================

# Align `when` with `case`.
Layout/CaseIndentation:
  Enabled: true

# Align comments with method definitions.
Layout/CommentIndentation:
  Enabled: true

Layout/EmptyLineAfterMagicComment:
  Enabled: true

# In a regular class definition, no empty lines around the body.
Layout/EmptyLinesAroundClassBody:
  Enabled: true

# In a regular method definition, no empty lines around the body.
Layout/EmptyLinesAroundMethodBody:
  Enabled: true

# In a regular module definition, no empty lines around the body.
Layout/EmptyLinesAroundModuleBody:
  Enabled: true

Layout/EmptyLineBetweenDefs:
  Enabled: true

# Align `end` with the matching keyword or starting expression except for
# assignments, where it should be aligned with the LHS.
Layout/EndAlignment:
  Enabled: true
  EnforcedStyleAlignWith: variable

Layout/ExtraSpacing:
  Enabled: true
  AllowForAlignment: true

Layout/FirstArgumentIndentation:
  Enabled: true

# Method definitions after `private` or `protected` isolated calls need one
# extra level of indentation.
Layout/IndentationConsistency:
  Enabled: true
  EnforcedStyle: indented_internal_methods

# Detect hard tabs, no hard tabs.
Layout/IndentationStyle:
  Enabled: true

# Two spaces, no tabs (for indentation).
Layout/IndentationWidth:
  Enabled: true

Layout/SpaceAfterColon:
  Enabled: true

Layout/SpaceAfterComma:
  Enabled: true

Layout/SpaceAroundEqualsInParameterDefault:
  Enabled: true

Layout/SpaceAroundKeyword:
  Enabled: true

Layout/SpaceAroundOperators:
  Enabled: true

# Use `foo {}` not `foo{}`.
Layout/SpaceBeforeBlockBraces:
  Enabled: true

Layout/SpaceBeforeFirstArg:
  Enabled: true

# checks for spaces between -> and opening parameter parenthesis (() in lambda literals.
Layout/SpaceInLambdaLiteral:
  Enabled: true
  EnforcedStyle: require_no_space

# Use `foo { bar }` not `foo {bar}`.
Layout/SpaceInsideBlockBraces:
  Enabled: true

# Use `{ a: 1 }` not `{a:1}`.
Layout/SpaceInsideHashLiteralBraces:
  Enabled: true

Layout/SpaceInsideParens:
  Enabled: true

# Blank lines should not have any spaces.
Layout/TrailingEmptyLines:
  Enabled: true

# No trailing whitespace.
Layout/TrailingWhitespace:
  Enabled: true

# ==============================================================================
# Lint namespace
# ==============================================================================

Lint/CircularArgumentReference:
  Enabled: true

Lint/Debugger: # don't leave any binding.pry
  Enabled: true
  Exclude: []

Lint/DuplicateCaseCondition:
  Enabled: true

Lint/DuplicateElsifCondition:
  Enabled: true

Lint/DuplicateHashKey:
  Enabled: true

Lint/DuplicateRegexpCharacterClassElement:
  Enabled: true

Lint/DuplicateRequire:
  Enabled: true

Lint/DuplicateRescueException:
  Enabled: true

# Use my_method(my_arg) not my_method( my_arg ) or my_method my_arg.
Lint/RequireParentheses:
  Enabled: true

# Checks if you assign a variable but don't use it anywhere.
Lint/UselessAssignment:
  Enabled: true

Lint/UselessRuby2Keywords:
  Enabled: true

# ==============================================================================
# Style namespace
# ==============================================================================

# Prefer &&/|| over and/or.
Style/AndOr:
  Enabled: true

Style/EndlessMethod:
  Enabled: true
  EnforcedStyle: disallow

Style/FrozenStringLiteralComment:
  Enabled: true
  EnforcedStyle: always
  SafeAutoCorrect: true
  Exclude:
    - "bin/**"

# Use Ruby >= 1.9 syntax for hashes. Prefer { a: :b } over { :a => :b }.
Style/HashSyntax:
  Enabled: true
  # We have to temporarily disable the shorthand syntax for now
  EnforcedShorthandSyntax: never

# Stabby Lambda
Style/Lambda:
  Enabled: true
  EnforcedStyle: literal

# Defining a method with parameters needs parentheses.
Style/MethodDefParentheses:
  Enabled: true

# Use quotes for string literals when they are enough.
Style/RedundantPercentQ:
  Enabled: true

Style/RedundantReturn:
  Enabled: true
  AllowMultipleReturnValues: true

Style/Semicolon:
  Enabled: true
  AllowAsExpressionSeparator: true

Style/SingleLineMethods:
  Enabled: true
  AllowIfMethodIsEmpty: false

# ==============================================================================
# RSpec namespace
# ==============================================================================

RSpec/Focus:
  Enabled: true
