# frozen_string_literal: true

=begin
#Azure OpenAI Service API

#Azure OpenAI APIs for completions and search

OpenAPI spec version: 2023-05-15

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.42
=end

# Common files
require 'azure_openai_client/api_client'
require 'azure_openai_client/api_error'
require 'azure_openai_client/version'
require 'azure_openai_client/configuration'

# Models
require 'azure_openai_client/models/chat_completions_body'
require 'azure_openai_client/models/deploymentid_completions_body'
require 'azure_openai_client/models/deploymentid_embeddings_body'
require 'azure_openai_client/models/deploymentsdeploymentidchatcompletions_messages'
require 'azure_openai_client/models/error_response'
require 'azure_openai_client/models/error_response_error'
require 'azure_openai_client/models/inline_response_200'
require 'azure_openai_client/models/inline_response_200_1'
require 'azure_openai_client/models/inline_response_200_1_data'
require 'azure_openai_client/models/inline_response_200_1_usage'
require 'azure_openai_client/models/inline_response_200_2'
require 'azure_openai_client/models/inline_response_200_2_choices'
require 'azure_openai_client/models/inline_response_200_2_message'
require 'azure_openai_client/models/inline_response_200_2_usage'
require 'azure_openai_client/models/inline_response_200_choices'
require 'azure_openai_client/models/inline_response_200_logprobs'
require 'azure_openai_client/models/inline_response_200_usage'
require 'azure_openai_client/models/one_ofchat_completions_body_stop'
require 'azure_openai_client/models/one_ofdeploymentid_completions_body_prompt'
require 'azure_openai_client/models/one_ofdeploymentid_completions_body_stop'

# APIs
require 'azure_openai_client/api/default_api'

module AzureOpenaiClient
  class << self
    # Customize default settings for the SDK using block.
    #   AzureOpenaiClient.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
